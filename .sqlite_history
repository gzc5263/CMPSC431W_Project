.quit
.open data.db
.tables
.mode table
.header on
pragma table_info(Transactions)
;
pragma table_info(CreditCard);
pragma table_info(Transactions);
select * from Account;
select * from Transactions;
.tables
select * from Account
select 
.tables
pragma table_info(Account);
pragma table_info(Branch);
pragma table_info(CreditCard);
pragma table_info(Customer);
.tables
pragma table_info(Employee);
pragma table_info(Owns);
pragma table_info(Transactions);
SELECT DISTINCT c.customerID, c.fname, c.lname
FROM Customer c
INNER JOIN CreditCard cc ON c.customerID = cc.customerID
WHERE (cc.credit_used / cc.credit_limit) > 0.8
ORDER BY c.customerID;
Select Distint c.customerID, c.fname, c.lname
From Customer c
inner Join CreditCard cc on c.customerID = cc.customerID
Where (cc.credit_used)/cc.creditlimit) >.8
;
SELECT DISTINCT c.customerID, c.fname, c.lname
From Customer c
;
SELECT DISTINCT c.customerID, c.fname, c.lname
from Customer c
Where (cc.credit_used)/cc.creditlimit) >.8
;
SELECT DISTINCT c.customerID, c.fname, c.lname
from Customer c
inner Join CreditCard cc on c.customerID = cc.customerID
Where (cc.credit_used)/cc.creditlimit) >.8
ORDER BY c.customerID;
SELECT DISTINCT c.customerID, c.fname, c.lname
from Customer c
inner Join CreditCard cc on c.customerID = cc.customerID
Where (cc.credit_used/cc.creditlimit) >.8
ORDER BY c.customerID;
SELECT DISTINCT c.customerID, c.fname, c.lname
from Customer c
inner Join CreditCard cc on c.customerID = cc.customerID
Where (cc.credit_used/cc.credit_limit) >.8
ORDER BY c.customerID;
select * from CreditCard
where (credit_used/credit_limit) > .8
;
SELECT c.customerID, c.fname, c.lname, COUNT(ac.accno) AS total_accounts
FROM Customer c
JOIN AccountCustomer ac ON c.customerID = ac.customerID
JOIN (
    SELECT customerID
    FROM AccountCustomer
    GROUP BY customerID
    HAVING COUNT(DISTINCT type) >= 2
) AS multi_type_accounts ON c.customerID = multi_type_accounts.customerID
GROUP BY c.customerID, c.fname, c.lname
ORDER BY total_accounts DESC, c.customerID;
SELECT c.customerID, c.fname, c.lname, COUNT(DISTINCT ac.type) AS total_account_types
FROM Customer c
JOIN Account ac ON c.customerID = ac.customerID
GROUP BY c.customerID, c.fname, c.lname
HAVING COUNT(DISTINCT ac.type) >= 2
ORDER BY total_account_types DESC, c.customerID;
SELECT c.customerID, c.fname, c.lname, COUNT(DISTINCT ac.type) AS total_account_types
FROM Customer c
JOIN Account ac ON c.customerID = ac.customerID
GROUP BY c.customerID, c.fname, c.lname
HAVING COUNT(DISTINCT ac.type) >= 2
ORDER BY total_account_types DESC, c.customerID;
SELECT c.customerID, c.fname, c.lname, COUNT(DISTINCT ac.type) AS total_account_types
FROM Customer c
JOIN Account ac ON c.customerID = ac.customerID
GROUP BY c.customerID, c.fname, c.lname
HAVING COUNT(DISTINCT ac.type) >= 2
ORDER BY total_account_types DESC, c.customerID;
SELECT c.customerID, c.fname, c.lname, COUNT(DISTINCT ac.type) AS total_account_types
FROM Customer c
JOIN Account ac ON c.customerID = ac.customerID
GROUP BY c.customerID, c.fname, c.lname
HAVING COUNT(DISTINCT ac.type) >= 2
ORDER BY total_account_types DESC, c.customerID;
SELECT c.customerID, c.fname, c.lname, COUNT(DISTINCT ac.type) AS total_account_types
FROM Customer c
JOIN Account ac ON c.customerID = ac.customerID
GROUP BY c.customerID, c.fname, c.lname
HAVING COUNT(DISTINCT ac.type) >= 2
ORDER BY total_account_types DESC, c.customerID;
.quit
